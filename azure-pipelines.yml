trigger:
  branches:
    include: 
    - master
variables:
  buildConfiguration: 'Release'
  location: 'West US 2'
  acrHostName: 'nodedemowebappdocker0041acr.azurecr.io'
  acrName: 'nodedemowebappdocker0041acr'
  rgName: 'nodedemowebappdocker0041-rg'
  imageName: 'nodedemowebappdocker0041'
  webAppName: 'nodedemowebappdocker0041'

stages:

# Build Stage
- stage: BuildAndTest
  jobs:
  - job: BuildAndTest
    pool: myUbuntuAgent

    steps:

    # Create or update the ACR resource
    - task: AzureResourceGroupDeployment@2
      displayName: 'Create Azure Container Registry'
      inputs:
        azureSubscription: 'newAzureSC'
        resourceGroupName: '$(rgName)'
        location: $(location)


    # Build container image
    - task: Docker@1
      displayName: 'Build container image'
      inputs:
        azureSubscriptionEndpoint: 'newAzureSC'
        azureContainerRegistry: '$(acrHostName)'
        imageName: '$(imageName):$(Build.BuildId)'
        useDefaultContext: false
        buildContext: '$(System.DefaultWorkingDirectory)/PublishedWebApp'

    # Push container image
    - task: Docker@1
      displayName: 'Push container image'
      inputs:
        azureSubscriptionEndpoint: 'newAzureSC'
        azureContainerRegistry: '$(acrHostName)'
        command: 'Push an image'
        imageName: '$(imageName):$(Build.BuildId)'

# Staging release
- stage: Staging
  jobs:
  - job: Release
    pool: myUbuntuAgent
    steps:
    # Don't clone the repo
    - checkout: none

    # Download the published application artifact
    - download: current
      artifact: app

    # Deploy App Service
    - task: AzureWebAppContainer@1
      displayName: 'Deploy Azure App Service'
      inputs:
        azureSubscription: 'newAzureSC'
        appName: 'nodedemo'
        imageName: '$(imageName):$(Build.BuildId)'
        osType: 'Linux'


        
